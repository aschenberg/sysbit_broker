// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: lesson_content.sql

package pg

import (
	"context"
)

const addLessonContent = `-- name: AddLessonContent :one
INSERT INTO lesson_content (
	page_id,
	lesson_id,
	step,
  	lang,
	content
) VALUES (
  $1,$2,$3,$4,$5
) RETURNING content_id
`

type AddLessonContentParams struct {
	PageID   int32
	LessonID int32
	Step     int32
	Lang     string
	Content  string
}

func (q *Queries) AddLessonContent(ctx context.Context, arg AddLessonContentParams) (int32, error) {
	row := q.db.QueryRow(ctx, addLessonContent,
		arg.PageID,
		arg.LessonID,
		arg.Step,
		arg.Lang,
		arg.Content,
	)
	var content_id int32
	err := row.Scan(&content_id)
	return content_id, err
}

const deleteLessonContent = `-- name: DeleteLessonContent :exec
DELETE FROM lesson_content WHERE content_id = $1
`

func (q *Queries) DeleteLessonContent(ctx context.Context, contentID int32) error {
	_, err := q.db.Exec(ctx, deleteLessonContent, contentID)
	return err
}

const updateLessonContent = `-- name: UpdateLessonContent :exec

UPDATE lesson_content SET content = $2 WHERE content_id = $1
`

type UpdateLessonContentParams struct {
	ContentID int32
	Content   string
}

// -- name: GetLesson :many
// SELECT * FROM lesson_content
// WHERE lessoncode = $1 AND lang=$2;
func (q *Queries) UpdateLessonContent(ctx context.Context, arg UpdateLessonContentParams) error {
	_, err := q.db.Exec(ctx, updateLessonContent, arg.ContentID, arg.Content)
	return err
}
