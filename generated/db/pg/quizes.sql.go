// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: quizes.sql

package pg

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const addOrUpdateQuize = `-- name: AddOrUpdateQuize :one
INSERT INTO quizes (
	lesson_id,
	num,
	lang,
  	quiz,
	answer
) VALUES (
  $1,$2,$3,$4,$5
) ON CONFLICT (lesson_id,num,lang) 
DO UPDATE SET quiz=EXCLUDED.quiz, answer=EXCLUDED.answer RETURNING quiz_id,
CASE WHEN xmax = 0 THEN 'inserted' ELSE 'updated' END as operation
`

type AddOrUpdateQuizeParams struct {
	LessonID int32
	Num      int32
	Lang     string
	Quiz     []byte
	Answer   []byte
}

type AddOrUpdateQuizeRow struct {
	QuizID    int32
	Operation string
}

func (q *Queries) AddOrUpdateQuize(ctx context.Context, arg AddOrUpdateQuizeParams) (AddOrUpdateQuizeRow, error) {
	row := q.db.QueryRow(ctx, addOrUpdateQuize,
		arg.LessonID,
		arg.Num,
		arg.Lang,
		arg.Quiz,
		arg.Answer,
	)
	var i AddOrUpdateQuizeRow
	err := row.Scan(&i.QuizID, &i.Operation)
	return i, err
}

const deleteQuiz = `-- name: DeleteQuiz :exec
DELETE FROM quizes WHERE quiz_id = $1
`

func (q *Queries) DeleteQuiz(ctx context.Context, quizID int32) error {
	_, err := q.db.Exec(ctx, deleteQuiz, quizID)
	return err
}

const getQuizByCode = `-- name: GetQuizByCode :many
SELECT a.lesson_id, lesson_code, title, image, quiz_id, b.lesson_id, num, lang, quiz, answer FROM lesson as a 
LEFT JOIN quizes as b ON a.lesson_id = b.lesson_id
WHERE a.lesson_code = $1 ORDER BY b.num
`

type GetQuizByCodeRow struct {
	LessonID   int32
	LessonCode string
	Title      string
	Image      string
	QuizID     pgtype.Int4
	LessonID_2 pgtype.Int4
	Num        pgtype.Int4
	Lang       pgtype.Text
	Quiz       []byte
	Answer     []byte
}

func (q *Queries) GetQuizByCode(ctx context.Context, lessonCode string) ([]GetQuizByCodeRow, error) {
	rows, err := q.db.Query(ctx, getQuizByCode, lessonCode)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GetQuizByCodeRow{}
	for rows.Next() {
		var i GetQuizByCodeRow
		if err := rows.Scan(
			&i.LessonID,
			&i.LessonCode,
			&i.Title,
			&i.Image,
			&i.QuizID,
			&i.LessonID_2,
			&i.Num,
			&i.Lang,
			&i.Quiz,
			&i.Answer,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
